schema {
  query: Query
  mutation: Mutation
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FindManyUserInput {
  email: String
  password: String
  username: String
}

input FindOneUserInput {
  email: String
  isActive: Boolean
  username: String
}

input LoginInput {
  emailOrUsername: String!
  password: String!
}

type Mutation {
  login(loginInput: LoginInput!): Token!
  register(registerInput: CreateUserInput!): Token!
  removeUser(id: Int!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
}

type Query {
  user(loginInput: FindOneUserInput!): User!
  users(findManyInput: FindManyUserInput!): [User!]!
}

type Token {
  access_token: String!
}

input UpdateUserInput {
  email: String
  id: Int!
  password: String
  username: String
}

type User {
  createdAt: DateTime!
  email: String!
  id: Float!
  password: String!
  updatedAt: DateTime!
  username: String!
}