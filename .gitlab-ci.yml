workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

stages: # List of stages for jobs, and their order of execution
  - build
  - test
#  - deploy

default:
  image: node:20
  before_script:
    - corepack enable

cache:
  paths:
    - .pnpm-store


frontend-build-job: # This job runs in the build stage, which runs first.
  stage: build
  script:
    - cd ./production/client
    - pnpm i
    - echo "Compiling the code..."
    - echo "Compile complete."
backend-build-job: # This job runs in the build stage, which runs first.
  stage: build
  script:
    - cd ./production/microservices
    - pnpm i
    - echo "Compiling the code..."
    - echo "Compile complete."



frontend-test-job: # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests..."
    - cd ./production/client
    - pnpm i
    - npm run test

frontend-lint-job: # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests..."
    - cd ./production/client
    - pnpm i
    - npm run lint

backend-test-job: # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests..."
    - cd ./production/microservices
    - pnpm i
    - npm run test

backend-lint-job: # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests..."
    - cd ./production/microservices
    - pnpm i
    - npm run lint

#deploy-job:      # This job runs in the deploy stage.
#  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#  environment: production
#  script:
#    - echo "Deploying application..."
#    - echo "Application successfully deployed."